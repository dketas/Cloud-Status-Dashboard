stages:
  - lint
  - test
  - sonarqube_scan
  - docker_build
  - deploy

lint:
  stage: lint
  image: python:3.9
  script:
    - pip install flake8
    - flake8 .

test:
  stage: test
  image: python:3.9
  script:
    - pip install -r requirements.txt
    - pytest

sonarqube_scan:
  stage: sonarqube_scan
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - sonar-scanner
  allow_failure: true

docker_build:
  stage: docker_build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  script:
    - kubectl apply -f flask-app.yaml
  only:
    - main

